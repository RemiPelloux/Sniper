[tool.poetry]
name = "sniper-cli"
version = "0.1.0"
description = "Penetration Testing CLI Tool with ML"
authors = ["Your Name <you@example.com>"] # Placeholder - User should update this
readme = "README.md"
license = "MIT" # Consider if this is the desired license
packages = [{include = "src"}]

[tool.poetry.scripts]
sniper = "src.cli.main:app"

[tool.poetry.dependencies]
python = "^3.11"
typer = {extras = ["all"], version = "^0.15.2"}
validators = "^0.34.0"
pydantic = "^2.11.3"
pydantic-settings = "^2.8.1"

# Optional dependencies for specific tool integrations
zaproxy = {version = "^0.4.0", optional = true}
wappalyzer = {version = "^1.0.12", optional = true} # Requires Firefox and geckodriver

[tool.poetry.extras]
zap = ["zaproxy"]
wappalyzer = ["wappalyzer"]

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
flake8 = "^7.2.0"
isort = "^6.0.1"
mypy = "^1.15.0"
pytest = "^8.3.5"
pytest-cov = "^6.1.1"
flake8-pyproject = "^1.2.3"
pytest-asyncio = "^0.26.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = "E203"
exclude = ".git,__pycache__,docs/,build/,dist/,*.egg-info/,venv/"
per-file-ignores = [
    "__init__.py: F401",
    "src/cli/main.py: E501",
    "tests/core/test_logging.py: E501",
    "src/core/config.py: E501",
    "src/integrations/dirsearch.py: E501",
    "src/integrations/sublist3r.py: E501",
    "src/integrations/owasp_zap.py: E501",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
# Add paths for mypy to check
exclude = ["venv"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=src --cov-report=term-missing --cov-fail-under=85"
testpaths = [
    "tests",
]
pythonpath = [
    ".",  # Add current directory (project root) to PYTHONPATH
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto" 